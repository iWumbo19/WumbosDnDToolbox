@page
@using DnDCharacterCreator.Options
@model WumbosDnDToolbox.Pages.NPCs.IndexModel
@section Styles{
    <link rel="stylesheet" href="~/css/npcpage.css" />
}
<container class="row-2">
    <form method="post" class="row">

        <section class="col">
                <label class="form-control-label">Race: </label>
                <select name="raceSelect" class="form-control">
                    <option value="">Random</option>
                    @foreach (var race in Enum.GetNames(typeof(Race)))
                    {
                        <option value="@race">@race</option>
                    }
                </select>
            </section> <!--Type Filter-->

        <section class="col">
                <label class="form-control-label">Class:</label>
                <select name="classSelect" class="form-control">
                    <option value="">Random</option>
                    @foreach (var _class in Enum.GetNames(typeof(Class)))
                    {
                        <option value="@_class">@_class</option>
                    }
                </select>
            </section> <!--Size Filter-->

            <div class="col mt-4">
                <button asp-page-handler="Generate" class="btn btn-primary form-button col">Generate</button>
            </div>
    </form>
    
</container>

<form class="charsheet">
  <header>
    <section class="charname">
      <label for="charname">Character Name</label><input name="charname" value="@Model.character.Name" />
    </section>
    <section class="misc">
      <ul>
        <li>
          <label for="classlevel">Class & Level</label><input name="classlevel" value="@Model.character.Class.GetClassName() @Model.character.Level">
        </li>
        <li>
          <label for="background">Background</label><input name="background" value="@Model.character.Personality.Background.GetBackgroundName()" />
        </li>
        <li>
          <label for="playername">Player Name</label><input name="playername" placeholder="Player McPlayerface">
        </li>
        <li>
          <label for="race">Race</label><input name="race" value="@Model.character.Race.GetRaceName()" />
        </li>
        <li>
          <label for="alignment">Alignment</label><input name="alignment" value="@Model.character.Personality.Alignment.ToString()" />
        </li>
        <li>
          <label for="experiencepoints">Experience Points</label><input name="experiencepoints" placeholder="3240" />
        </li>
      </ul>
    </section>
  </header>
  <main>
    <section>
      <section class="attributes">
        <div class="scores">
          <ul>
            <li>
              <div class="score">
                <label for="Strengthscore">Strength</label><input name="Strengthscore" value="@Model.character.Stats[(int)Stat.Strength]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Strengthmod" value="@Model.character.StrengthMod" class="statmod"/>
              </div>
            </li>
            <li>
              <div class="score">
                <label for="Dexterityscore">Dexterity</label><input name="Dexterityscore" value="@Model.character.Stats[(int)Stat.Dexterity]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Dexteritymod" value="@Model.character.DexterityMod" class=statmod/>
              </div>
            </li>
            <li>
              <div class="score">
                <label for="Constitutionscore">Constitution</label><input name="Constitutionscore" value="@Model.character.Stats[(int)Stat.Constitution]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Constitutionmod" value="@Model.character.ConstitutionMod" class="statmod"/>
              </div>
            </li>
            <li>
              <div class="score">
                <label for="Wisdomscore">Wisdom</label><input name="Wisdomscore" value="@Model.character.Stats[(int)Stat.Wisdom]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Wisdommod" value="@Model.character.WisdomMod" />
              </div>
            </li>
            <li>
              <div class="score">
                <label for="Intelligencescore">Intelligence</label><input name="Intelligencescore" value="@Model.character.Stats[(int)Stat.Intelligence]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Intelligencemod" value="@Model.character.IntelligenceMod" class="statmod"/>
              </div>
            </li>
            <li>
              <div class="score">
                <label for="Charismascore">Charisma</label><input name="Charismascore" value="@Model.character.Stats[(int)Stat.Charisma]" class="stat"/>
              </div>
              <div class="modifier">
                <input name="Charismamod" value="@Model.character.CharismaMod" class="statmod"/>
              </div>
            </li>
          </ul>
        </div>
        <div class="attr-applications">
          <div class="inspiration box">
            <div class="label-container">
              <label for="inspiration">Inspiration</label>
            </div>
            <input name="inspiration" type="checkbox" />
          </div>
          <div class="proficiencybonus box">
            <div class="label-container">
              <label for="proficiencybonus">Proficiency Bonus</label>
            </div>
            <input name="proficiencybonus" value="@Model.character.Proficiency" />
          </div>
          <div class="saves list-section box">
            <ul>
              <li>
                <label for="Strength-save">Strength</label><input name="Strength-save" value="@Model.character.StrengthSave" type="text" />
                @if(Model.character.IsProficient(Stat.Strength)) { <input name="Strength-save-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Stat.Strength)) { <input name="Strength-save-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Dexterity-save">Dexterity</label><input name="Dexterity-save" value="@Model.character.DexteritySave" type="text" />
                @if(Model.character.IsProficient(Stat.Dexterity)) { <input name="Dexterity-save-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Stat.Dexterity)) { <input name="Dexterity-save-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Constitution-save">Constitution</label><input name="Constitution-save" value="@Model.character.ConstitutionSave" type="text" />
                @if(@Model.character.IsProficient(Stat.Constitution)) { <input name="Constitution-save-prof" type="checkbox" checked/> }
                @if(!@Model.character.IsProficient(Stat.Constitution)) { <input name="Constitution-save-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Wisdom-save">Wisdom</label><input name="Wisdom-save" value="@Model.character.WisdomSave" type="text" />
                @if(Model.character.IsProficient(Stat.Wisdom)) { <input name="Wisdom-save-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Stat.Wisdom)) { <input name="Wisdom-save-prof" type="checkbox" /> }

              </li>
              <li>
                <label for="Intelligence-save">Intelligence</label><input name="Intelligence-save" value="@Model.character.IntelligenceSave" type="text" />
                @if(Model.character.IsProficient(Stat.Intelligence)) { <input name="Intelligence-save-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Stat.Intelligence)) { <input name="Intelligence-save-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Charisma-save">Charisma</label><input name="Charisma-save" value="@Model.character.CharismaSave" type="text" />
                @if(Model.character.IsProficient(Stat.Charisma)) { <input name="Charisma-save-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Stat.Charisma)) { <input name="Charisma-save-prof" type="checkbox" /> }
              </li>
            </ul>
            <div class="label">
              Saving Throws
            </div>
          </div>
          <div class="skills list-section box">
            <ul>
              <li>
                <label for="Acrobatics">Acrobatics <span class="skill">(Dex)</span></label><input name="Acrobatics" value="@Model.character.Acrobatics" type="text" />
                @if(Model.character.IsProficient(Skill.Acrobatics)) { <input name="Acrobatics-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Acrobatics)) { <input name="Acrobatics-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Animal Handling">Animal Handling <span class="skill">(Wis)</span></label><input name="Animal Handling" value="@Model.character.Arcana" type="text" />
                @if(Model.character.IsProficient(Skill.AnimalHandling)) { <input name="Animal Handling-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.AnimalHandling)) { <input name="Animal Handling-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Arcana">Arcana <span class="skill">(Int)</span></label><input name="Arcana" value="@Model.character.Arcana" type="text" />
                @if(Model.character.IsProficient(Skill.Arcana)) { <input name="Arcana-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Arcana)) { <input name="Arcana-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Athletics">Athletics <span class="skill">(Str)</span></label><input name="Athletics" value="@Model.character.Athletics" type="text" />
                @if(Model.character.IsProficient(Skill.Athletics)) { <input name="Athletics-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Athletics)) { <input name="Athletics-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Deception">Deception <span class="skill">(Cha)</span></label><input name="Deception" value="@Model.character.Deception" type="text" />
                @if(Model.character.IsProficient(Skill.Deception)) { <input name="Deception-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Deception)) { <input name="Deception-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="History">History <span class="skill">(Int)</span></label><input name="History" value="@Model.character.History" type="text" />
                @if(Model.character.IsProficient(Skill.History)) { <input name="History-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.History)) { <input name="History-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Insight">Insight <span class="skill">(Wis)</span></label><input name="Insight" value="@Model.character.Insight" type="text" />
                @if(Model.character.IsProficient(Skill.Insight)) { <input name="Insight-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Insight)) { <input name="Insight-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Intimidation">Intimidation <span class="skill">(Cha)</span></label><input name="Intimidation" value="@Model.character.Intimidation" type="text" />
                @if(Model.character.IsProficient(Skill.Intimidation)) { <input name="Intimidation-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Intimidation)) { <input name="Intimidation-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Investigation">Investigation <span class="skill">(Int)</span></label><input name="Investigation" value="@Model.character.Investigation" type="text" />
                @if(Model.character.IsProficient(Skill.Investigation)) { <input name="Investigation-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Investigation)) { <input name="Investigation-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Medicine">Medicine <span class="skill">(Wis)</span></label><input name="Medicine" value="@Model.character.Medicine" type="text" />
                @if(Model.character.IsProficient(Skill.Medicine)) { <input name="Medicine-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Medicine)) { <input name="Medicine-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Nature">Nature <span class="skill">(Int)</span></label><input name="Nature" value="@Model.character.Nature" type="text" />
                @if(Model.character.IsProficient(Skill.Nature)) { <input name="Nature-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Nature)) { <input name="Nature-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Perception">Perception <span class="skill">(Wis)</span></label><input name="Perception" value="@Model.character.Perception" type="text" />
                @if(Model.character.IsProficient(Skill.Perception)) { <input name="Perception-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Perception)) { <input name="Perception-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Performance">Performance <span class="skill">(Cha)</span></label><input name="Performance" value="@Model.character.Performance" type="text" />
                @if(Model.character.IsProficient(Skill.Performance)) { <input name="Performance-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Performance)) { <input name="Performance-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Persuasion">Persuasion <span class="skill">(Cha)</span></label><input name="Persuasion" value="@Model.character.Persuasion" type="text" />
                @if(Model.character.IsProficient(Skill.Acrobatics)) { <input name="Acrobatics-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Acrobatics)) { <input name="Acrobatics-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Religion">Religion <span class="skill">(Int)</span></label><input name="Religion" value="@Model.character.Religion" type="text" />
                @if(Model.character.IsProficient(Skill.Religion)) { <input name="Religion-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Religion)) { <input name="Religion-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Sleight of Hand">Sleight of Hand <span class="skill">(Dex)</span></label><input name="Sleight of Hand" value="@Model.character.SleightOfHand" type="text" />
                @if(Model.character.IsProficient(Skill.SleightOfHand)) { <input name="Sleight Of Hand-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.SleightOfHand)) { <input name="Sleight Of Hand-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Stealth">Stealth <span class="skill">(Dex)</span></label><input name="Stealth" value="@Model.character.Stealth" type="text" />
                @if(Model.character.IsProficient(Skill.Stealth)) { <input name="Stealth-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Stealth)) { <input name="Stealth-prof" type="checkbox" /> }
              </li>
              <li>
                <label for="Survival">Survival <span class="skill">(Wis)</span></label><input name="Survival" value="@Model.character.Survival" type="text" />
                @if(Model.character.IsProficient(Skill.Survival)) { <input name="Survival-prof" type="checkbox" checked/> }
                @if(!Model.character.IsProficient(Skill.Survival)) { <input name="Survival-prof" type="checkbox" /> }
              </li>
            </ul>
            <div class="label">
              Skills
            </div>
          </div>
        </div>
      </section>
      <div class="passive-perception box">
        <div class="label-container">
          <label for="passiveperception">Passive Wisdom (Perception)</label>
        </div>
        <input name="passiveperception" value="@(8+Model.character.Perception)" />
      </div>
      <div class="otherprofs box textblock">
        <label for="otherprofs">Other Proficiencies and Languages</label><textarea name="otherprofs">@Model.GetProficiencies()</textarea>
      </div>
    </section>
    <section>
      <section class="combat">
        <div class="armorclass">
          <div>
            <label for="ac">Armor Class</label><input name="ac" placeholder="10" type="text" />
          </div>
        </div>
        <div class="initiative">
          <div>
            <label for="initiative">Initiative</label><input name="initiative" value="@Model.character.DexterityMod" type="text" />
          </div>
        </div>
        <div class="speed">
          <div>
            <label for="speed">Speed</label><input name="speed" value="@Model.character.Speed" type="text" />
          </div>
        </div>
        <div class="hp">
          <div class="regular">
            <div class="max">
              <label for="maxhp">Hit Point Maximum</label><input name="maxhp" value="@Model.character.MaxHealth" type="text" />
            </div>
            <div class="current">
              <label for="currenthp">Current Hit Points</label><input name="currenthp" value="@Model.character.MaxHealth" type="text" />
            </div>
          </div>
          <div class="temporary">
            <label for="temphp">Temporary Hit Points</label><input name="temphp" type="text" />
          </div>
        </div>
        <div class="hitdice">
          <div>
            <div class="total">
              <label onclick="totalhd_clicked()" for="totalhd">Total</label><input name="totalhd" value="@(Model.character.Level)d@(@Model.character.HitDie) " type="text" />
            </div>
            <div class="remaining">
              <label for="remaininghd">Hit Dice</label><input name="remaininghd" type="text" />
            </div>
          </div>
        </div>
        <div class="deathsaves">
          <div>
            <div class="label">
              <label>Death Saves</label>
            </div>
            <div class="marks">
              <div class="deathsuccesses">
                <label>Successes</label>
                <div class="bubbles">
                  <input name="deathsuccess1" type="checkbox" />
                  <input name="deathsuccess2" type="checkbox" />
                  <input name="deathsuccess3" type="checkbox" />
                </div>
              </div>
              <div class="deathfails">
                <label>Failures</label>
                <div class="bubbles">
                  <input name="deathfail1" type="checkbox" />
                  <input name="deathfail2" type="checkbox" />
                  <input name="deathfail3" type="checkbox" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      <section class="attacksandspellcasting">
        <div>
          <label>Attacks & Spellcasting</label>
          <table>
            <thead>
              <tr>
                <th>
                  Name
                </th>
                <th>
                  Atk Bonus
                </th>
                <th>
                  Damage/Type
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <input name="atkname1" type="text" value="@Model.character.WeaponEquiped.Name" />
                </td>
                <td>
                  <input name="atkbonus1" type="text" value="+@Model.character.HitBonus"/>
                </td>
                <td>
                  <input name="atkdamage1" type="text" value="@(Model.character.WeaponEquiped.DieAmount)d@(Model.character.WeaponEquiped.DamageDie) @Model.character.WeaponEquiped.DamageType"/>
                </td>
              </tr>
              <tr>
                <td>
                  <input name="atkname2" type="text" />
                </td>
                <td>
                  <input name="atkbonus2" type="text" />
                </td>
                <td>
                  <input name="atkdamage2" type="text" />
                </td>
              </tr>
              <tr>
                <td>
                  <input name="atkname3" type="text" />
                </td>
                <td>
                  <input name="atkbonus3" type="text" />
                </td>
                <td>
                  <input name="atkdamage3" type="text" />
                </td>
              </tr>
            </tbody>
          </table>
          <textarea></textarea>
        </div>
      </section>
      <section class="equipment">
        <div>
          <label>Equipment</label>
          <div class="money">
            <ul>
              <li>
                <label for="cp">cp</label><input name="cp" />
              </li>
              <li>
                <label for="sp">sp</label><input name="sp" />
              </li>
              <li>
                <label for="ep">ep</label><input name="ep" />
              </li>
              <li>
                <label for="gp">gp</label><input name="gp" />
              </li>
              <li>
                <label for="pp">pp</label><input name="pp" />
              </li>
            </ul>
          </div>
          <textarea placeholder="Equipment list here"></textarea>
        </div>
      </section>
    </section>
    <section>
      <section class="flavor">
        <div class="personality">
          <label for="personality">Personality</label><textarea name="personality">@Model.character.Personality.Trait</textarea>
        </div>
        <div class="ideals">
          <label for="ideals">Ideals</label><textarea name="ideals">@Model.character.Personality.Ideal</textarea>
        </div>
        <div class="bonds">
          <label for="bonds">Bonds</label><textarea name="bonds">@Model.character.Personality.Bond</textarea>
        </div>
        <div class="flaws">
          <label for="flaws">Flaws</label><textarea name="flaws">@Model.character.Personality.Flaw</textarea>
        </div>
      </section>
      <section class="features">
        <div>
          <label for="features">Features & Traits</label>
          <textarea name="features">@Model.character.GetAbilitiesString()</textarea>
        </div>
      </section>
    </section>
  </main>
</form>